dataSources:
  # 第一个数据库配置  ds_0和ds_1是逻辑表名
  ds_0:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://127.0.0.1:3306/ds0?useUnicode=true&characterEncoding=UTF-8&rewriteBatchedStatements=true&allowMultiQueries=true&serverTimezone=Asia/Shanghai
    username: root
    password: yfs13981482985
  ds_1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://127.0.0.1:3306/ds1?useUnicode=true&characterEncoding=UTF-8&rewriteBatchedStatements=true&allowMultiQueries=true&serverTimezone=Asia/Shanghai
    username: root
    password: yfs13981482985

rules:
  # 分片规则配置
  - !SHARDING
    tables:
      t_user:
        actualDataNodes: ds_0.t_user${1..5}, ds_1.t_user${1..3}
        #  user_id 的分片算法决定记录分配到哪张表
        tableStrategy:
          standard:
            shardingColumn: user_id
            shardingAlgorithmName: custom_table_algorithm
        #   根据 user_id 的分片算法决定记录分配到哪个数据库
        databaseStrategy:
          standard:
            shardingColumn: user_id
            shardingAlgorithmName: database_inline
      # 分片算法配置
    shardingAlgorithms:
      # 数据库分片算法
      database_inline:
        type: INLINE
        props:
          # 取模计算分配到 ds_0 或 ds_1
          algorithm-expression: ds_${user_id % 2}
      # 表分片算法
      custom_table_algorithm:
        # 自定义分片算法
        type: CLASS_BASED
        props:
          algorithmClassName: com.yang.shardingsphere.config.CustomTableShardingAlgorithm
          strategy: standard
  # 加密规则配置
  - !ENCRYPT
    tables:
      t_user:
        columns:
          # 密码字段，逻辑字段，不一定是在数据库中真实存在
          password:
            # 密码字段存储的密文字段，这个是数据库中真实存在的字段
            cipherColumn: password
            # 密码字段加密算法
            encryptorName: common_encryptor
          id_cart:
            cipherColumn: id_cart
            # 密码字段加密算法
            encryptorName: common_encryptor
        # 是否按照密文字段查询
        queryWithCipherColumn: true
    # 加密算法
    encryptors:
      # 自定义加密算法名称
      common_encryptor:
        # 加密算法类型
        type: AES
        props:
          # AES 加密密钥
          aes-key-value: d6oadClrrb9A3GWo

# 展现逻辑 SQL & 真实 SQL
props:
  sql-show: true






